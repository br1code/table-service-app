// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TableService.Data;

#nullable disable

namespace TableService.Migrations
{
    [DbContext(typeof(TableServiceDbContext))]
    [Migration("20230512042737_Rename-column-on-table-RestaurantTable")]
    partial class RenamecolumnontableRestaurantTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TableService.Data.Entities.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RestaurantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RestaurantId");

                    b.ToTable("restaurant");
                });

            modelBuilder.Entity("TableService.Data.Entities.RestaurantTable", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TableId"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("restaurant-table");
                });

            modelBuilder.Entity("TableService.Data.Entities.TableNotification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TableId")
                        .HasColumnType("integer");

                    b.Property<bool>("Viewed")
                        .HasColumnType("boolean");

                    b.HasKey("NotificationId");

                    b.HasIndex("TableId");

                    b.ToTable("table-notification");
                });

            modelBuilder.Entity("TableService.Data.Entities.RestaurantTable", b =>
                {
                    b.HasOne("TableService.Data.Entities.Restaurant", "Restaurant")
                        .WithMany("RestaurantTables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("TableService.Data.Entities.TableNotification", b =>
                {
                    b.HasOne("TableService.Data.Entities.RestaurantTable", "RestaurantTable")
                        .WithMany("TableNotifications")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RestaurantTable");
                });

            modelBuilder.Entity("TableService.Data.Entities.Restaurant", b =>
                {
                    b.Navigation("RestaurantTables");
                });

            modelBuilder.Entity("TableService.Data.Entities.RestaurantTable", b =>
                {
                    b.Navigation("TableNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
